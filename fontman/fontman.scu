--[[
  This source file is part of the SubCritical distribution.
  Copyright (C) 2008-2009 Solra Bizna.

  SubCritical is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 2 of the
  License, or (at your option) any later version.

  SubCritical is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of both the GNU General Public
  License and the GNU Lesser General Public License along with
  SubCritical.  If not, see <http://www.gnu.org/licenses/>.

  Please see doc/license.html for clarifications.
]]

fontman = {}
local fontman = fontman

ttf = {}
local ttf = ttf
TTF = ttf

function fontman.newfont(path)
   local numt = {}
   local weird = {}
   function numt.__index(t, k)
      assert(not rawget(t, k), "Lua metatables are melting!")
      if(type(k) ~= "number" or k < 1/64) then return nil end
      local nufont = assert(SC.Construct("FreetypeFont", path))
      nufont:SetSize(k)
      rawset(t, k, nufont)
      return nufont
   end
   function numt.__call(t, x, y)
      if(not y) then
	 return t[x]
      else
	 if(not weird[x]) then
	    weird[x] = {}
	 end
	 if(not weird[x][y]) then
	    local nufont = assert(SC.Construct("FreetypeFont", path))
	    nufont:SetSize(x, y)
	    weird[x][y] = nufont
	    return nufont
	 end
	 return weird[x][y]
      end
   end
   local ret = {_isfont_=true}
   setmetatable(ret, numt)
   return ret
end
