--[[
  This source file is part of the SubCritical distribution.
  Copyright (C) 2008-2012 Solra Bizna.

  SubCritical is free software: you can redistribute it and/or modify
  it under the terms of the GNU Lesser General Public License as
  published by the Free Software Foundation, either version 2 of the
  License, or (at your option) any later version.

  SubCritical is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU Lesser General Public License for more details.

  You should have received a copy of both the GNU General Public
  License and the GNU Lesser General Public License along with
  SubCritical.  If not, see <http://www.gnu.org/licenses/>.

  Please see doc/license.html for clarifications.
]]

local scui = require "scui"
require "liberation"

local uranium = {}
uranium.font = TTF.Liberation.Sans[12]
uranium.bfont = TTF.Liberation.Sans.Bold[12]

function uranium.DrawBox(x, y, w, h)
   if(screen.DrawBox) then return screen:DrawBox(x, y, w, h)
   else
      screen:DrawRect(x, y, w, 1)
      screen:DrawRect(x, y+h-1, w, 1)
      screen:DrawRect(x, y+1, 1, h-2)
      screen:DrawRect(x+w-1, y+1, 1, h-2)
   end
end

-- avoid clobbering any existing value for the uranium global
local old_uranium = _ENV.uranium
_ENV.uranium = uranium
dofile(P"box.lua")
dofile(P"text.lua")
dofile(P"button.lua")
dofile(P"field.lua")
dofile(P"cursor.lua")
_ENV.uranium = old_uranium

function uranium.Alert(text, default_button, cancel_button, other_button)
   if(default_button == true) then default_button = "OK" end
   if(cancel_button == true) then cancel_button = "Cancel" end
   if(other_button == true) then other_button = "Abort" end
   local alert = {
      w=400,
      type=uranium.box, filled=true,
      {x=20,y=15,w=360,type=uranium.text,text=text},
   }
   uranium.text.SetupText(alert[1])
   local buttony = alert[1].h + alert[1].y + 10
   alert.h = buttony + 35
   alert[#alert+1] = {x=295,y=buttony,w=85,h=20,type=uranium.button,hotkeys={["return"]=true},text=default_button or "OK",tag=1}
   if(cancel_button) then
      alert[#alert+1] = {x=200,y=buttony,w=85,h=20,type=uranium.button,hotkeys={["escape"]=true},text=cancel_button,tag=2}
   end
   if(other_button) then
      alert[#alert+1] = {x=105,y=buttony,w=85,h=20,type=uranium.button,hotkeys={["backspace"]=true,["delete"]=true},text=other_button,tag=3}
   end
   scui.MostlyCenterWidget(alert)
   scui.CompileWidget(alert)
   return scui.RunModal(alert, nil, uranium.cursor())
end

return uranium
